<project basedir=".">
    <!-- ========================================================================================= -->
    <!-- Script runs functional tests on few sample projects from <grails>/testcases directory.    -->
    <!-- You must build and install locally a Clover-for-Grails plugin before running these tests. -->
    <!-- You must run ant build for this file with a <grails>/testcases as current directory.      -->
    <!-- See https://extranet.atlassian.com/display/CLOVER/Clover-for-Grails+Release+Procedure     -->
    <!-- "Build and Test" chapter. Output reports have to be verified manually.                    -->
    <!-- ========================================================================================= -->

    <!-- Enter a Clover-for-Grails version being tested. It will be downloaded from ~/.m2 cache    -->
    <property name="grails.clover.version" value="3.1.6"/>

    <!-- Enter a Clover Core version being used by Clover-for-Grails. It must be the same number
    as defined in <grails>/grails-app/conf/BuildConfig.groovy clover.core.version -->
    <property name="clover.core.version" value="3.1.6"/>

    <!-- Uncomment to have report launched in a web browser
    <property name="grails.clover.view" value="-clover.view"/> -->
    <property name="grails.clover.view" value=""/>

    <!-- ========================================================================================= -->

    <!-- Import extra Ant tasks -->
    <taskdef resource="net/sf/antcontrib/antlib.xml"
             classpath="../../lib/ant-contrib-1.0b3.jar"/>

    <!-- Location where we have Grails binaries archives to unpack -->
    <property name="grails.dist.dir" value="../dist"/>
    <property name="grails.plugin.file" location="${user.home}/.m2/repository/org/grails/plugins/clover/${grails.clover.version}/clover-${grails.clover.version}.zip"/>
    <property name="clover.core.file" location="${user.home}/.m2/repository/com/cenqua/clover/clover/${clover.core.version}/clover-${clover.core.version}.jar"/>
    <property environment="env"/>

    <target name="init">
        <!-- Check if complied version of grails is installed locally in Maven cache -->
        <fail message="The Clover-for-Grails plugin version ${grails.clover.version} was not found in ${grails.plugin.file}. Please compile and install locally plugin first!">
            <condition>
                <not>
                    <available file="${grails.plugin.file}"/>
                </not>
            </condition>
        </fail>

        <!-- Check if we're running Java 6 or higher (required by Grails 2.x) -->
        <fail message="The Clover-for-Grails functional test requires Java6 or higher to run. Please set your JAVA_HOME / PATH accordingly.">
            <condition>
                <not>
                    <available classname="java.util.Deque"/>
                </not>
            </condition>
        </fail>
        <echoproperties />
    </target>

    <!-- Clean up single test case project. Requires:
        project.name - name of the project to be tested - located in ./<project.name> directory
     -->
    <target name="_clean-testcase">
        <delete dir="${basedir}/${project.name}/target"/>
    </target>

    <!-- Run single test case project. Requires:
        grails.version - version of Grails framework, it's a part of ../../dist/grails-<ver>.zip filename
        grails.clover.version - version of Clover for Grails plugin, it's a part of ../../grails-clover-<ver>.zip filename
        project.name - name of the project to be tested - located in ./<project.name> directory
        expected.coverage - Coverage box value - from dashboard in html report
        expected.testresults - Test Results box value - from dashboard in html report
    -->
    <target name="_test-testcase">
        <echo message="TESTING PROJECT ${project.name}"/>

        <property name="grails.temp.dir" value="${java.io.tmpdir}/grails-${grails.version}"/>
        <property name="m2.temp.dir" value="${grails.temp.dir}/.m2/repository"/>

        <!-- Unzip grails framework from archive to temp dir -->
        <echo message="Extracting grails distribution archive ..."/>
        <delete dir="${grails.temp.dir}"/>
        <unzip src="${grails.dist.dir}/grails-${grails.version}.zip" dest="${java.io.tmpdir}"/>

        <!-- Copy grails plugin from $HOME/.m2 repo to our temporary .m2 repo -->
        <copy file="${grails.plugin.file}" todir="${m2.temp.dir}/org/grails/plugins/clover/${grails.clover.version}" overwrite="true"/>
        <!-- Copy clover core jar from $HOME/.m2 repo to our temporary .m2 repo -->
        <copy file="${clover.core.file}" todir="${m2.temp.dir}/com/cenqua/clover/clover/${clover.core.version}" overwrite="true"/>

        <!-- Copy license file from $HOME to temporary home -->
        <copy file="../etc/clover-development.license" tofile="${grails.temp.dir}/clover.license"/>

        <!-- Copy default groovy settings to temporary .grails dir -->
        <mkdir dir="${grails.temp.dir}/.grails"/>
        <copy file="settings.groovy" todir="${grails.temp.dir}/.grails"/>

        <!-- Remove trash from previous build -->
        <delete dir="${basedir}/${project.name}/target"/>
        <delete dir="${basedir}/${project.name}/plugins"/>

        <!-- Extra switches for grails 2.x -->
        <condition property="grails2.args" value="-plain-output" else="">
            <matches pattern="^2.*$" string="${grails.version}"/>
        </condition>

        <!-- Project compilation and tests -->
        <echo message="Executing grails on sample project ..."/>
        <if>
            <os family="windows"/>
            <then>
                <!-- On Windows we call 'cmd /c grails.bat ...' shell -->
                <echo message="Executing:
                set GRAILS_HOME=${grails.temp.dir}
                cd ${basedir}/${project.name}
                cmd /c ${grails.temp.dir}/bin/grails.bat -Dgrails.project.compile.verbose=true -Dgrails.project.work.dir=${grails.temp.dir}/.grails -Divy.default.ivy.user.dir=${grails.temp.dir}/.ivy2 -Duser.home=${grails.temp.dir} test-app -clover.on ${grails.clover.view}"/>
                <exec executable="cmd" dir="${basedir}/${project.name}" failonerror="false">
                    <arg value="/c"/>
                    <arg value="${grails.temp.dir}/bin/grails.bat"/>
                    <arg value="-Dgrails.project.compile.verbose=true"/>
                    <arg value="-Dgrails.project.work.dir=${grails.temp.dir}/.grails"/> <!-- Grails' project cache -->
                    <arg value="-Divy.default.ivy.user.dir=${grails.temp.dir}/.ivy2"/>  <!-- Grails' .ivy2 local repo cache -->
                    <arg value="-Duser.home=${grails.temp.dir}"/>                       <!-- HOME for .m2 repo location-->
                    <arg value="test-app"/>
                    <arg value="-clover.on"/>
                    <arg value="${grails.clover.view}"/>
                    <arg value="${grails2.args}"/>
                    <env key="GRAILS_HOME" path="${grails.temp.dir}"/>
                    <env key="JAVA_OPTS" value="-XX:MaxPermSize=256M -Xms128M -Xmx256M"/>
                </exec>
            </then>
            <else>
                <!-- On Linux/MacOS we call 'grails' command directly -->
                <exec executable="${grails.temp.dir}/bin/grails" dir="${basedir}/${project.name}" failonerror="false">
                    <arg value="-Dgrails.project.compile.verbose=true"/>
                    <arg value="-Dgrails.project.work.dir=${grails.temp.dir}/.grails"/> <!-- Grails' project cache -->
                    <arg value="-Divy.default.ivy.user.dir=${grails.temp.dir}/.ivy2"/>  <!-- Grails' .ivy2 local repo cache -->
                    <arg value="-Duser.home=${grails.temp.dir}"/>                       <!-- HOME for .m2 repo location-->
                    <arg value="test-app"/>
                    <arg value="-clover.on"/>
                    <arg value="${grails.clover.view}"/>
                    <arg value="${grails2.args}"/>
                    <env key="GRAILS_HOME" path="${grails.temp.dir}"/>
                    <env key="JAVA_OPTS" value="-XX:MaxPermSize=256M -Xms128M -Xmx256M"/>
                </exec>
            </else>
        </if>

        <!-- TODO add automatic testing of coverage value
        expected.coverage - Coverage box value - from dashboard in html report
        expected.testresults - Test Results box value - from dashboard in html report
        parse ${basedir}/${project.name}/target/clover/report/dashboard.html
        <label ...>Coverage</label><span> [61 classes, 1 888 / 4 603 elements]
        <label ...>Test Results</label>...<span> <span class="">[58 / 58]</span> tests
        -->
        <delete dir="${grails.temp.dir}"/>
    </target>


    <!-- For compatibility with global.* targets -->
    <target name="build"/>
    <target name="repkg"/>
    <target name="checkstyle"/>

    <target name="clean">
        <antcall target="_clean-testcase">
            <param name="project.name" value="petclinic"/>
        </antcall>
        <antcall target="_clean-testcase">
            <param name="project.name" value="weceem"/>
        </antcall>
        <antcall target="_clean-testcase">
            <param name="project.name" value="daily-groove"/>
        </antcall>
        <antcall target="_clean-testcase">
            <param name="project.name" value="grails-website"/>
        </antcall>
    </target>

    <target name="test" depends="init">
        <antcall target="_test-testcase">
            <param name="grails.version" value="1.3.0"/>
            <param name="project.name" value="petclinic"/>
            <param name="expected.coverage" value="12 classes, 64 / 123 elements"/>
            <param name="expected.testresults" value="9 / 9"/>
        </antcall>
        <antcall target="_test-testcase">
            <param name="grails.version" value="1.3.8"/>
            <param name="project.name" value="weceem"/>
            <param name="expected.coverage" value="61 classes, 1 888 / 4 603 elements"/>
            <param name="expected.testresults" value="58 / 58"/>
        </antcall>
        <antcall target="_test-testcase">
            <param name="grails.version" value="1.3.8"/>
            <param name="project.name" value="daily-groove"/>
            <param name="expected.coverage" value="6 classes, 22 / 95 elements"/>
            <param name="expected.testresults" value="5 / 5 tests"/>
        </antcall>
        <antcall target="_test-testcase">
            <param name="grails.version" value="2.0.3"/>
            <param name="project.name" value="grails-website"/>
            <param name="expected.coverage" value="88 classes, 1 206 / 3 515 elements"/>
            <param name="expected.testresults" value="3 / 7 tests"/>
        </antcall>
    </target>
</project>